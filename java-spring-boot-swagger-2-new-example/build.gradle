buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.course'
version = '1.0.0'
sourceCompatibility = 1.10

repositories {
	mavenCentral()
}

ext {
	commonsLang3Version = '3.8.1'
	elasticSearchVersion = '6.5.0'
	junitVersion = '5.3.1'
	junitPlatformVersion = '1.3.1'
	micrometerRegistryVersion = '1.1.0'
	springfoxVersion = '2.9.2'
}
	
dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-data-elasticsearch')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation("io.micrometer:micrometer-registry-elastic:${micrometerRegistryVersion}")
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	
	compile "org.apache.commons:commons-lang3:${commonsLang3Version}",
		"org.elasticsearch.client:transport:${elasticSearchVersion}",
		"io.springfox:springfox-swagger2:${springfoxVersion}",
		"io.springfox:springfox-swagger-ui:${springfoxVersion}"
	compileOnly("org.springframework.boot:spring-boot-devtools")
	
	testCompile "org.junit.jupiter:junit-jupiter-engine:${junitVersion}",
		"org.junit.jupiter:junit-jupiter-api:${junitVersion}",
		"org.junit.platform:junit-platform-runner:${junitPlatformVersion}",
		"org.junit.platform:junit-platform-suite-api:${junitPlatformVersion}"
}
